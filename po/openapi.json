{"openapi": "3.0.2", "info": {"title": "PO - Authentication", "version": "0.1.0"}, "paths": {"/create_customer": {"post": {"tags": ["private"], "summary": "Create Customer", "description": "Creates a customer of the PO that has not registered with MECA.", "operationId": "create_customer_create_customer_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateAccountRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/delete_customer": {"post": {"tags": ["private"], "summary": "Delete Customer", "operationId": "delete_customer_delete_customer_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AccountModel"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/user/create_user": {"post": {"tags": ["public"], "summary": "Create User", "description": "Creates a user from a created (now mocked) customer account, and creates a DID and credential for the user using the public key provided. Overwrites previous DID if one already exists.The claims for the credential are retrieved from the customer account.", "operationId": "create_user_user_create_user_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateUserRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateUserResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/po/create_schema": {"post": {"tags": ["public"], "summary": "Create Schema", "operationId": "create_schema_po_create_schema_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ClaimSchema"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DidServiceResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"AccountModel": {"title": "AccountModel", "required": ["username", "password"], "type": "object", "properties": {"username": {"title": "Username", "type": "string", "example": "username"}, "password": {"title": "Password", "type": "string", "example": "password"}}}, "AgeSchema": {"title": "AgeSchema", "required": ["type", "description"], "type": "object", "properties": {"type": {"title": "Type", "type": "string", "example": "integer"}, "description": {"title": "Description", "type": "string", "example": "the age of the certificate owner"}}}, "ClaimPropertiesSchema": {"title": "ClaimPropertiesSchema", "required": ["name", "gender", "age"], "type": "object", "properties": {"name": {"$ref": "#/components/schemas/NameSchema"}, "gender": {"$ref": "#/components/schemas/GenderSchema"}, "age": {"$ref": "#/components/schemas/AgeSchema"}}}, "ClaimSchema": {"title": "ClaimSchema", "required": ["title", "description", "properties", "required"], "type": "object", "properties": {"title": {"title": "Title", "type": "string", "example": "schema_title"}, "description": {"title": "Description", "type": "string", "example": "schema_description"}, "properties": {"$ref": "#/components/schemas/ClaimPropertiesSchema"}, "required": {"title": "Required", "type": "array", "items": {}, "example": "[\"name\", \"age\"]"}}}, "CreateAccountRequest": {"title": "CreateAccountRequest", "required": ["username", "password"], "type": "object", "properties": {"name": {"title": "Name", "type": "string", "example": "John Doe"}, "gender": {"title": "Gender", "type": "string", "example": "M"}, "age": {"title": "Age", "type": "integer", "example": 42}, "username": {"title": "Username", "type": "string", "example": "username"}, "password": {"title": "Password", "type": "string", "example": "password"}}}, "CreateUserRequest": {"title": "CreateUserRequest", "required": ["public_key"], "type": "object", "properties": {"public_key": {"title": "Public Key", "type": "string"}}}, "CreateUserResponse": {"title": "CreateUserResponse", "required": ["did", "credential"], "type": "object", "properties": {"did": {"title": "Did", "type": "string"}, "credential": {"title": "Credential", "type": "object"}}}, "DidServiceResponse": {"title": "DidServiceResponse", "required": ["errorCode", "errorMessage"], "type": "object", "properties": {"result": {"title": "Result", "type": "object"}, "errorCode": {"title": "Errorcode", "type": "integer"}, "errorMessage": {"title": "Errormessage", "type": "string"}, "transactionInfo": {"title": "Transactioninfo", "type": "object"}}}, "GenderSchema": {"title": "GenderSchema", "required": ["enum", "type", "description"], "type": "object", "properties": {"enum": {"title": "Enum", "type": "array", "items": {}, "example": ["M", "F"]}, "type": {"title": "Type", "type": "string", "example": "string"}, "description": {"title": "Description", "type": "string", "example": "the gender of the certificate owner"}}}, "HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "NameSchema": {"title": "NameSchema", "required": ["type", "description"], "type": "object", "properties": {"type": {"title": "Type", "type": "string", "example": "string"}, "description": {"title": "Description", "type": "string", "example": "the name of the certificate owner"}}}, "UserResponse": {"title": "UserResponse", "required": ["username"], "type": "object", "properties": {"username": {"title": "Username", "type": "string"}}}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}}}