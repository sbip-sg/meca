{
  "contractName": "MecaSchedulerContract",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "schedulerFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "taskId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "TaskSent",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback",
      "payable": true
    },
    {
      "inputs": [],
      "name": "SCHEDULER_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "clear",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "taskId",
          "type": "bytes32"
        }
      ],
      "name": "finishTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHostContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "taskId",
          "type": "bytes32"
        }
      ],
      "name": "getRunningTask",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "ipfsSha256",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "inputHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "size",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "towerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "hostAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startBlock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "blockTimeout",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "tower",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "host",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "scheduler",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "task",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "insurance",
                  "type": "uint256"
                }
              ],
              "internalType": "struct MecaSchedulerAbstractContract.RunningTaskFee",
              "name": "fee",
              "type": "tuple"
            }
          ],
          "internalType": "struct MecaSchedulerAbstractContract.RunningTask",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getTaskContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getTowerContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hostsEndBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "runningTasks",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "ipfsSha256",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "inputHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "towerAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "hostAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockTimeout",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tower",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "host",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "scheduler",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "task",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "insurance",
              "type": "uint256"
            }
          ],
          "internalType": "struct MecaSchedulerAbstractContract.RunningTaskFee",
          "name": "fee",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "schedulerFlag",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "schedulerNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "towerAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "hostAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "ipfsSha256",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "inputHash",
          "type": "bytes32"
        }
      ],
      "name": "sendTask",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newHostContract",
          "type": "address"
        }
      ],
      "name": "setHostContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "newSchedulerFlag",
          "type": "bool"
        }
      ],
      "name": "setSchedulerFlag",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newTaskContract",
          "type": "address"
        }
      ],
      "name": "setTaskContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newTowerContract",
          "type": "address"
        }
      ],
      "name": "setTowerContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "towersSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "hostAddress",
          "type": "address"
        }
      ],
      "name": "getHostFirstAvailableBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "towerAddress",
          "type": "address"
        }
      ],
      "name": "getTowerCurrentSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"schedulerFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"taskId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"TaskSent\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"SCHEDULER_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clear\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"taskId\",\"type\":\"bytes32\"}],\"name\":\"finishTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHostContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"}],\"name\":\"getHostFirstAvailableBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"taskId\",\"type\":\"bytes32\"}],\"name\":\"getRunningTask\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ipfsSha256\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"inputHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"towerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockTimeout\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"host\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheduler\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"task\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"insurance\",\"type\":\"uint256\"}],\"internalType\":\"struct MecaSchedulerAbstractContract.RunningTaskFee\",\"name\":\"fee\",\"type\":\"tuple\"}],\"internalType\":\"struct MecaSchedulerAbstractContract.RunningTask\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTaskContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTowerContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"towerAddress\",\"type\":\"address\"}],\"name\":\"getTowerCurrentSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hostsEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"runningTasks\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"ipfsSha256\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"inputHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"towerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockTimeout\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"host\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheduler\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"task\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"insurance\",\"type\":\"uint256\"}],\"internalType\":\"struct MecaSchedulerAbstractContract.RunningTaskFee\",\"name\":\"fee\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"schedulerFlag\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"schedulerNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"towerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"hostAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"ipfsSha256\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"inputHash\",\"type\":\"bytes32\"}],\"name\":\"sendTask\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newHostContract\",\"type\":\"address\"}],\"name\":\"setHostContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"newSchedulerFlag\",\"type\":\"bool\"}],\"name\":\"setSchedulerFlag\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newTaskContract\",\"type\":\"address\"}],\"name\":\"setTaskContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newTowerContract\",\"type\":\"address\"}],\"name\":\"setTowerContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"towersSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"clear()\":{\"details\":\"This function is used to clear the contract\"},\"finishTask(bytes32)\":{\"params\":{\"taskId\":\"The ID of the task\"}},\"getHostFirstAvailableBlock(address)\":{\"params\":{\"hostAddress\":\"The address of the host\"},\"returns\":{\"_0\":\"uint256 The first available block\"}},\"getRunningTask(bytes32)\":{\"params\":{\"taskId\":\"The ID of the task\"},\"returns\":{\"_0\":\"RunningTask The running task\"}},\"getTowerCurrentSize(address)\":{\"params\":{\"towerAddress\":\"The address of the tower\"},\"returns\":{\"_0\":\"uint256 The current size of the tower\"}},\"sendTask(address,address,bytes32,bytes32)\":{\"params\":{\"hostAddress\":\"The address of the host\",\"inputHash\":\"The hash of the input\",\"ipfsSha256\":\"The IPFS hash of the task\",\"towerAddress\":\"The address of the tower\"}},\"setHostContract(address)\":{\"params\":{\"newHostContract\":\"The new host contract\"}},\"setSchedulerFlag(bool)\":{\"params\":{\"newSchedulerFlag\":\"The new scheduler flag\"}},\"setTaskContract(address)\":{\"params\":{\"newTaskContract\":\"The new task contract\"}},\"setTowerContract(address)\":{\"params\":{\"newTowerContract\":\"The new tower contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"SCHEDULER_FEE()\":{\"notice\":\"The scheduler fee\"},\"clear()\":{\"notice\":\"The clear function\"},\"finishTask(bytes32)\":{\"notice\":\"Finish a task\"},\"getHostContract()\":{\"notice\":\"Get the host contract\"},\"getHostFirstAvailableBlock(address)\":{\"notice\":\"Get the host first available block\"},\"getRunningTask(bytes32)\":{\"notice\":\"Get the running task\"},\"getTaskContract()\":{\"notice\":\"Get the task contract\"},\"getTowerContract()\":{\"notice\":\"Get the tower contract\"},\"getTowerCurrentSize(address)\":{\"notice\":\"Get the tower current size\"},\"hostsEndBlock(address)\":{\"notice\":\"The end block of the hosts map of hostAddress to endBlock\"},\"owner()\":{\"notice\":\"The owner of the contract\"},\"runningTasks(bytes32)\":{\"notice\":\"The running tasks map of taskId to running task\"},\"schedulerFlag()\":{\"notice\":\"The scheduler flag\"},\"schedulerNonce()\":{\"notice\":\"The scheduler nonce\"},\"sendTask(address,address,bytes32,bytes32)\":{\"notice\":\"Send a task to the scheduler\"},\"setHostContract(address)\":{\"notice\":\"The setHostContract function\"},\"setSchedulerFlag(bool)\":{\"notice\":\"The setSchedulerFlag function\"},\"setTaskContract(address)\":{\"notice\":\"The setTaskContract function\"},\"setTowerContract(address)\":{\"notice\":\"The setTowerContract function\"},\"towersSize(address)\":{\"notice\":\"The Tower size map of towerAddress to size\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SchedulerContract.sol\":\"MecaSchedulerContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[],\"viaIR\":true},\"sources\":{\"project:/contracts/HostAbstract.sol\":{\"keccak256\":\"0xdd86a0a5588f8b94537597309dde103bdc2a30d40de730df02efb20bfc00cbec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1f69e7cc1999db7b869464f177aaa1f3c356ee5e5ec369caced80db7a5cf3eb\",\"dweb:/ipfs/QmbdcPGLABgSeCoV78J3CJTtKwGDovyhvEmH6FRPX3AoHw\"]},\"project:/contracts/SchedulerAbstract.sol\":{\"keccak256\":\"0xbcf6291d232a520124bfea321f7fc8d32f0952b167e40cb9628dad069e7cb123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666aac561e576c8f46dae3290094d1ef3745094186347ba07e5c09a4ccfbb974\",\"dweb:/ipfs/QmSThfgHnJhoqsQJTfStg2gz6fLhzLHK6QDSqmXEtxbBe4\"]},\"project:/contracts/SchedulerContract.sol\":{\"keccak256\":\"0x998924c7df2d12a9f54e02277fb2a02b0842650028361f71b75e522d48caf3da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3ac1af621e75614883b23001e16f8cb290bb6f4d6e5e5d70c05f67762a26a1d\",\"dweb:/ipfs/QmTQgihmGnCuqQtaTPovHPL4hAn2GJF8mJwSnqXHJB3e4L\"]},\"project:/contracts/TaskAbstract.sol\":{\"keccak256\":\"0x539d8b7b8336d50cd6e5af04552e3a9b0d47cf91ace4a2922fdec62e1654883d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ccf9c8bf2ad2d3c82460e8f0ceaacbf15df5422646b57e8d0f2b54494e0ca2\",\"dweb:/ipfs/QmWDdzHQT9Qa4sL47LbSqgM4Hb7WRWsomDE4L6hL58BB2V\"]},\"project:/contracts/TowerAbstract.sol\":{\"keccak256\":\"0xb8e634bf0b06fb07d3b146d90eefbaf01f759b91104baeaa24b2a89d8ec10363\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2c67926c71f71fb35031041067999b80b8ed1d85a9c42c99eef717af8e15eb5\",\"dweb:/ipfs/QmWsqBTs88ACHx4bqnyvmTctE39howPCKhLQMBtD7yYvrR\"]}},\"version\":1}",
  "bytecode": "0x60a0346100a157601f61125938819003918201601f19168301916001600160401b038311848410176100a6578084926020946040528339810103126100a1575160018060a01b031990328260005416176000556080528060015416600155806002541660025560035416600355600060045560ff196005541660055560405161119c90816100bd82396080518181816105c8015281816108ab01526108f10152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080806040526004361015610020575b50361561001b57600080fd5b600080fd5b60003560e01c90816277285b14610ecb575080630182d79e14610e915780630efda04f14610e68578063191a1fa514610e455780631b1fb71b146107075780632e926915146106cd5780634b95fb061461068457806352efea6e1461065c57806357de12a81461061657806366041a73146105eb5780636735f2d6146105b0578063781d102a146103695780638c57c521146103205780638da5cb5b146102f7578063a074f11e146102ce578063abc1e7eb1461022f578063b5c0ca5a14610206578063b64d963d146101bd578063dce839401461019f5763f1caea5a14610108573861000f565b3461001b57602036600319011261001b57610121611064565b506101a06101306004356110d7565b61019d6040519180518352602081015160208401526040810151604084015260018060a01b0380606083015116606085015280608083015116608085015260a08201511660a084015260c081015160c084015260e081015160e08401526101008091015190830190610fab565bf35b3461001b57600036600319011261001b576020600454604051908152f35b3461001b57602036600319011261001b576101d6610f01565b6000546001600160a01b0391906101f09083163314610fd8565b1660018060a01b03196003541617600355600080f35b3461001b57600036600319011261001b576001546040516001600160a01b039091168152602090f35b3461001b57602036600319011261001b5760043560005260066020526101a0604060002061019d815491600181015490600281015460018060a01b038060038401541690806004850154169060058501541691600685015493610299600860078801549701610f6f565b96604051998a5260208a015260408901526060880152608087015260a086015260c085015260e0840152610100830190610fab565b3461001b57600036600319011261001b576002546040516001600160a01b039091168152602090f35b3461001b57600036600319011261001b576000546040516001600160a01b039091168152602090f35b3461001b57602036600319011261001b57610339610f01565b6000546001600160a01b0391906103539083163314610fd8565b1660018060a01b03196002541617600255600080f35b3461001b5760208060031936011261001b57600435610387816110d7565b60a08101516001600160a01b039290831633036105605780600052600684526002604060002001548360036040600020015416600052600785526040600020805491820391821161054a5755600052600683526000600c6040822082815582600182015582600282015582600382015582600482015582600582015582600682015582600782015582600882015582600982015582600a82015582600b820155015581606082015116600080808061010086019485515190828215610541575bf1156104dd57600080808086608087015116888651015190828215610538575bf1156104dd57600080808060808551015181811561052f575b3390f1156104dd57838360025416925160246040518095819363f5108acf60e01b835260048301525afa9182156104dd576000926104f3575b5060009350839283926060849351015191839183156104e9575b1690f1156104dd57005b6040513d6000823e3d90fd5b6108fc92506104d3565b8092508491943d8311610528575b61050b8183610f4e565b8101031261001b575191818316830361001b5760009290836104b9565b503d610501565b506108fc610480565b506108fc610467565b506108fc610447565b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b815260048101859052602260248201527f4f6e6c7920746865206f776e65722063616e2066696e69736820746865207461604482015261736b60f01b6064820152608490fd5b3461001b57600036600319011261001b5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b3461001b57602036600319011261001b57602061060e610609610f01565b6110b0565b604051908152f35b3461001b57602036600319011261001b5760043580151580910361001b5761064960018060a01b03600054163314610fd8565b60ff801960055416911617600555600080f35b3461001b57600036600319011261001b5761068260018060a01b03600054163314610fd8565b005b3461001b57602036600319011261001b5761069d610f01565b6000546001600160a01b0391906106b79083163314610fd8565b1660018060a01b03196001541617600155600080f35b3461001b57602036600319011261001b576001600160a01b036106ee610f01565b1660005260086020526020604060002054604051908152f35b608036600319011261001b5761071b610f01565b6024356001600160a01b038116900361001b5760ff6005541615610e0957600254604051638b90363b60e01b815260443560048201526001600160a01b0390911691602082602481865afa9182156104dd57600092610dd5575b50600154604051639e89c6f360e01b8152916001600160a01b0390911690602083806107a960443560243560048401611011565b0381855afa9283156104dd57600093610d9e575b5060206024956107cb611039565b50604051636802756f60e11b8152604435600482015296879182905afa9485156104dd57600095610d6a575b50600354604051636daed56f60e11b81526001600160a01b038381166004830152602482018790526044820186905290939116602084606481845afa9384156104dd57600094610d36575b50604051631f1d38bb60e21b8152906020828061086760443560243560048401611011565b0381865afa9182156104dd57600092610d02575b50816108d08961089b6108a98961089b600a6108a08361089b8a8961102c565b61102c565b0496879561102c565b7f00000000000000000000000000000000000000000000000000000000000000009061102c565b3403610ccf57602498602093604051976108e989610f17565b8852848801527f000000000000000000000000000000000000000000000000000000000000000060408801526060870152608086015260405197888092630917c3e560e31b825260018060a01b03871660048301525afa9586156104dd57600096610c9a575b5060405163e24edcab60e01b8152602480356001600160a01b03166004830152909691602091889182905afa9586156104dd57600096610c66575b506109966024356110b0565b956109ab6109a4868961102c565b914361102c565b10610c175760018060a01b03821660005260076020526109d08560406000205461102c565b11610bd657600454604051926020840160018060601b0319808560601b16825260243560601b16603486015260443560488601526064356068860152826088860152608885528460c08101106001600160401b0360c087011117610bc05760c08501604052845190209460018301831161054a577fcfe6437cbca63a8c29f041708629c403575f4d257f1e9d25d95aa07cbd9400b497604097600c95600160809601600455610a8160c08901610f32565b60443560c089015260e08801916064358352610100890190815261012089019160018060a01b0316825261014089019060018060a01b036024351682526101608a01933385526101808b019586526101a08b019687526101c08b019788528b600052600660205260c08d6000209b01518b555160018b01555160028a0155600389019160018060a01b039051169160018060a01b03199283825416179055600489019060018060a01b0390511682825416179055600588019160018060a01b039051169082541617905551600686015551600785015551805160088501556020810151600985015585810151600a8501556060810151600b8501550151910155600282600020015460018060a01b036003846000200154166000526007602052610bb08360002091825461102c565b90558151908152336020820152a1005b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b8152602060048201526019602482015278151bddd95c881cda5e99481b1a5b5a5d08195e18d959591959603a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152602160248201527f486f737420626c6f636b2074696d656f7574206c696d697420657863656564656044820152601960fa1b6064820152608490fd5b9095506020813d602011610c92575b81610c8260209383610f4e565b8101031261001b5751948661098a565b3d9150610c75565b95506020863d602011610cc7575b81610cb560209383610f4e565b8101031261001b57945194602061094f565b3d9150610ca8565b60405162461bcd60e51b815260206004820152600b60248201526a57726f6e672066756e647360a81b6044820152606490fd5b9091506020813d602011610d2e575b81610d1e60209383610f4e565b8101031261001b5751908861087b565b3d9150610d11565b9093506020813d602011610d62575b81610d5260209383610f4e565b8101031261001b57519287610842565b3d9150610d45565b9094506020813d602011610d96575b81610d8660209383610f4e565b8101031261001b575193856107f7565b3d9150610d79565b9492506020853d602011610dcd575b81610dba60209383610f4e565b8101031261001b579351919360206107bd565b3d9150610dad565b9091506020813d602011610e01575b81610df160209383610f4e565b8101031261001b57519083610775565b3d9150610de4565b60405162461bcd60e51b81526020600482015260146024820152735363686564756c6572206e6f742061637469766560601b6044820152606490fd5b3461001b57600036600319011261001b57602060ff600554166040519015158152f35b3461001b57600036600319011261001b576003546040516001600160a01b039091168152602090f35b3461001b57602036600319011261001b576001600160a01b03610eb2610f01565b1660005260076020526020604060002054604051908152f35b3461001b57602036600319011261001b576020906001600160a01b03610eef610f01565b16600052600782526040600020548152f35b600435906001600160a01b038216820361001b57565b60a081019081106001600160401b03821117610bc057604052565b61012081019081106001600160401b03821117610bc057604052565b90601f801991011681019081106001600160401b03821117610bc057604052565b90604051610f7c81610f17565b608060048294805484526001810154602085015260028101546040850152600381015460608501520154910152565b60808091805184526020810151602085015260408101516040850152606081015160608501520151910152565b15610fdf57565b60405162461bcd60e51b815260206004820152600a6024820152694f776e6572206f6e6c7960b01b6044820152606490fd5b6001600160a01b039091168152602081019190915260400190565b9190820180921161054a57565b6040519061104682610f17565b60006080838281528260208201528260408201528260608201520152565b6040519061107182610f32565b8160008082528060208301528060408301528060608301528060808301528060a08301528060c083015260e08201526101006110ab611039565b910152565b6001600160a01b03166000908152600860205260409020544381106110d25790565b504390565b6110df611064565b506000526006602052604060002061115d6008604051926110ff84610f32565b80548452600181015460208501526002810154604085015260038101546001600160a01b03908116606086015260048201548116608086015260058201541660a0850152600681015460c0850152600781015460e085015201610f6f565b6101008201529056fea2646970667358221220a91cfee7596788ef73ba61cef157caab77bfee73eb6ae9362e2e8351dc47791464736f6c63430008110033",
  "deployedBytecode": "0x6080806040526004361015610020575b50361561001b57600080fd5b600080fd5b60003560e01c90816277285b14610ecb575080630182d79e14610e915780630efda04f14610e68578063191a1fa514610e455780631b1fb71b146107075780632e926915146106cd5780634b95fb061461068457806352efea6e1461065c57806357de12a81461061657806366041a73146105eb5780636735f2d6146105b0578063781d102a146103695780638c57c521146103205780638da5cb5b146102f7578063a074f11e146102ce578063abc1e7eb1461022f578063b5c0ca5a14610206578063b64d963d146101bd578063dce839401461019f5763f1caea5a14610108573861000f565b3461001b57602036600319011261001b57610121611064565b506101a06101306004356110d7565b61019d6040519180518352602081015160208401526040810151604084015260018060a01b0380606083015116606085015280608083015116608085015260a08201511660a084015260c081015160c084015260e081015160e08401526101008091015190830190610fab565bf35b3461001b57600036600319011261001b576020600454604051908152f35b3461001b57602036600319011261001b576101d6610f01565b6000546001600160a01b0391906101f09083163314610fd8565b1660018060a01b03196003541617600355600080f35b3461001b57600036600319011261001b576001546040516001600160a01b039091168152602090f35b3461001b57602036600319011261001b5760043560005260066020526101a0604060002061019d815491600181015490600281015460018060a01b038060038401541690806004850154169060058501541691600685015493610299600860078801549701610f6f565b96604051998a5260208a015260408901526060880152608087015260a086015260c085015260e0840152610100830190610fab565b3461001b57600036600319011261001b576002546040516001600160a01b039091168152602090f35b3461001b57600036600319011261001b576000546040516001600160a01b039091168152602090f35b3461001b57602036600319011261001b57610339610f01565b6000546001600160a01b0391906103539083163314610fd8565b1660018060a01b03196002541617600255600080f35b3461001b5760208060031936011261001b57600435610387816110d7565b60a08101516001600160a01b039290831633036105605780600052600684526002604060002001548360036040600020015416600052600785526040600020805491820391821161054a5755600052600683526000600c6040822082815582600182015582600282015582600382015582600482015582600582015582600682015582600782015582600882015582600982015582600a82015582600b820155015581606082015116600080808061010086019485515190828215610541575bf1156104dd57600080808086608087015116888651015190828215610538575bf1156104dd57600080808060808551015181811561052f575b3390f1156104dd57838360025416925160246040518095819363f5108acf60e01b835260048301525afa9182156104dd576000926104f3575b5060009350839283926060849351015191839183156104e9575b1690f1156104dd57005b6040513d6000823e3d90fd5b6108fc92506104d3565b8092508491943d8311610528575b61050b8183610f4e565b8101031261001b575191818316830361001b5760009290836104b9565b503d610501565b506108fc610480565b506108fc610467565b506108fc610447565b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b815260048101859052602260248201527f4f6e6c7920746865206f776e65722063616e2066696e69736820746865207461604482015261736b60f01b6064820152608490fd5b3461001b57600036600319011261001b5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b3461001b57602036600319011261001b57602061060e610609610f01565b6110b0565b604051908152f35b3461001b57602036600319011261001b5760043580151580910361001b5761064960018060a01b03600054163314610fd8565b60ff801960055416911617600555600080f35b3461001b57600036600319011261001b5761068260018060a01b03600054163314610fd8565b005b3461001b57602036600319011261001b5761069d610f01565b6000546001600160a01b0391906106b79083163314610fd8565b1660018060a01b03196001541617600155600080f35b3461001b57602036600319011261001b576001600160a01b036106ee610f01565b1660005260086020526020604060002054604051908152f35b608036600319011261001b5761071b610f01565b6024356001600160a01b038116900361001b5760ff6005541615610e0957600254604051638b90363b60e01b815260443560048201526001600160a01b0390911691602082602481865afa9182156104dd57600092610dd5575b50600154604051639e89c6f360e01b8152916001600160a01b0390911690602083806107a960443560243560048401611011565b0381855afa9283156104dd57600093610d9e575b5060206024956107cb611039565b50604051636802756f60e11b8152604435600482015296879182905afa9485156104dd57600095610d6a575b50600354604051636daed56f60e11b81526001600160a01b038381166004830152602482018790526044820186905290939116602084606481845afa9384156104dd57600094610d36575b50604051631f1d38bb60e21b8152906020828061086760443560243560048401611011565b0381865afa9182156104dd57600092610d02575b50816108d08961089b6108a98961089b600a6108a08361089b8a8961102c565b61102c565b0496879561102c565b7f00000000000000000000000000000000000000000000000000000000000000009061102c565b3403610ccf57602498602093604051976108e989610f17565b8852848801527f000000000000000000000000000000000000000000000000000000000000000060408801526060870152608086015260405197888092630917c3e560e31b825260018060a01b03871660048301525afa9586156104dd57600096610c9a575b5060405163e24edcab60e01b8152602480356001600160a01b03166004830152909691602091889182905afa9586156104dd57600096610c66575b506109966024356110b0565b956109ab6109a4868961102c565b914361102c565b10610c175760018060a01b03821660005260076020526109d08560406000205461102c565b11610bd657600454604051926020840160018060601b0319808560601b16825260243560601b16603486015260443560488601526064356068860152826088860152608885528460c08101106001600160401b0360c087011117610bc05760c08501604052845190209460018301831161054a577fcfe6437cbca63a8c29f041708629c403575f4d257f1e9d25d95aa07cbd9400b497604097600c95600160809601600455610a8160c08901610f32565b60443560c089015260e08801916064358352610100890190815261012089019160018060a01b0316825261014089019060018060a01b036024351682526101608a01933385526101808b019586526101a08b019687526101c08b019788528b600052600660205260c08d6000209b01518b555160018b01555160028a0155600389019160018060a01b039051169160018060a01b03199283825416179055600489019060018060a01b0390511682825416179055600588019160018060a01b039051169082541617905551600686015551600785015551805160088501556020810151600985015585810151600a8501556060810151600b8501550151910155600282600020015460018060a01b036003846000200154166000526007602052610bb08360002091825461102c565b90558151908152336020820152a1005b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b8152602060048201526019602482015278151bddd95c881cda5e99481b1a5b5a5d08195e18d959591959603a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152602160248201527f486f737420626c6f636b2074696d656f7574206c696d697420657863656564656044820152601960fa1b6064820152608490fd5b9095506020813d602011610c92575b81610c8260209383610f4e565b8101031261001b5751948661098a565b3d9150610c75565b95506020863d602011610cc7575b81610cb560209383610f4e565b8101031261001b57945194602061094f565b3d9150610ca8565b60405162461bcd60e51b815260206004820152600b60248201526a57726f6e672066756e647360a81b6044820152606490fd5b9091506020813d602011610d2e575b81610d1e60209383610f4e565b8101031261001b5751908861087b565b3d9150610d11565b9093506020813d602011610d62575b81610d5260209383610f4e565b8101031261001b57519287610842565b3d9150610d45565b9094506020813d602011610d96575b81610d8660209383610f4e565b8101031261001b575193856107f7565b3d9150610d79565b9492506020853d602011610dcd575b81610dba60209383610f4e565b8101031261001b579351919360206107bd565b3d9150610dad565b9091506020813d602011610e01575b81610df160209383610f4e565b8101031261001b57519083610775565b3d9150610de4565b60405162461bcd60e51b81526020600482015260146024820152735363686564756c6572206e6f742061637469766560601b6044820152606490fd5b3461001b57600036600319011261001b57602060ff600554166040519015158152f35b3461001b57600036600319011261001b576003546040516001600160a01b039091168152602090f35b3461001b57602036600319011261001b576001600160a01b03610eb2610f01565b1660005260076020526020604060002054604051908152f35b3461001b57602036600319011261001b576020906001600160a01b03610eef610f01565b16600052600782526040600020548152f35b600435906001600160a01b038216820361001b57565b60a081019081106001600160401b03821117610bc057604052565b61012081019081106001600160401b03821117610bc057604052565b90601f801991011681019081106001600160401b03821117610bc057604052565b90604051610f7c81610f17565b608060048294805484526001810154602085015260028101546040850152600381015460608501520154910152565b60808091805184526020810151602085015260408101516040850152606081015160608501520151910152565b15610fdf57565b60405162461bcd60e51b815260206004820152600a6024820152694f776e6572206f6e6c7960b01b6044820152606490fd5b6001600160a01b039091168152602081019190915260400190565b9190820180921161054a57565b6040519061104682610f17565b60006080838281528260208201528260408201528260608201520152565b6040519061107182610f32565b8160008082528060208301528060408301528060608301528060808301528060a08301528060c083015260e08201526101006110ab611039565b910152565b6001600160a01b03166000908152600860205260409020544381106110d25790565b504390565b6110df611064565b506000526006602052604060002061115d6008604051926110ff84610f32565b80548452600181015460208501526002810154604085015260038101546001600160a01b03908116606086015260048201548116608086015260058201541660a0850152600681015460c0850152600781015460e085015201610f6f565b6101008201529056fea2646970667358221220a91cfee7596788ef73ba61cef157caab77bfee73eb6ae9362e2e8351dc47791464736f6c63430008110033",
  "immutableReferences": {
    "1281": [
      {
        "length": 32,
        "start": 1480
      },
      {
        "length": 32,
        "start": 2219
      },
      {
        "length": 32,
        "start": 2289
      }
    ]
  },
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "276:2067:4:-:0;;;;;;;;;;;;;-1:-1:-1;;276:2067:4;;;;-1:-1:-1;;;;;276:2067:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2936:9:3;;276:2067:4;-1:-1:-1;276:2067:4;;;-1:-1:-1;276:2067:4;2957:28:3;;276:2067:4;;;;;;;3067:60:3;276:2067:4;;3067:60:3;276:2067:4;3138:62:3;276:2067:4;;3138:62:3;276:2067:4;-1:-1:-1;3211:18:3;276:2067:4;;;3240:21:3;276:2067:4;;3240:21:3;276:2067:4;;;;;;;;;2957:28:3;276:2067:4;;;;;;;;;;;;;;;;;-1:-1:-1;276:2067:4;;;;;;-1:-1:-1;276:2067:4;;;;;-1:-1:-1;276:2067:4",
  "deployedSourceMap": "276:2067:4:-:0;;;;;;;;;;-1:-1:-1;276:2067:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;276:2067:4;;;;;;:::i;:::-;;;9087:23:3;276:2067:4;;9087:23:3;:::i;:::-;276:2067:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;276:2067:4;;;;;;;;;;;;;;;;;;;-1:-1:-1;;276:2067:4;;;;;;:::i;:::-;;;-1:-1:-1;;;;;276:2067:4;;2306:42:3;;276:2067:4;;2314:10:3;:19;2306:42;:::i;:::-;276:2067:4;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;276:2067:4;;;;;;;;-1:-1:-1;;;;;276:2067:4;;;;;;;;;;;;;;-1:-1:-1;;276:2067:4;;;;;;;;405:51;276:2067;;;;;;;;;405:51;276:2067;405:51;;276:2067;405:51;;;;276:2067;;;;;;405:51;276:2067;405:51;;276:2067;;405:51;;276:2067;405:51;;276:2067;;405:51;;;;276:2067;;405:51;;;;276:2067;405:51;;;;;;276:2067;405:51;;;:::i;:::-;276:2067;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;276:2067:4;;;;8601:12:3;276:2067:4;;;-1:-1:-1;;;;;276:2067:4;;;;;;;;;;;;;;-1:-1:-1;;276:2067:4;;;;;;;;-1:-1:-1;;;;;276:2067:4;;;;;;;;;;;;;;-1:-1:-1;;276:2067:4;;;;;;:::i;:::-;;;-1:-1:-1;;;;;276:2067:4;;2306:42:3;;276:2067:4;;2314:10:3;:19;2306:42;:::i;:::-;276:2067:4;;;;;;;4316:65:3;276:2067:4;;;4316:65:3;276:2067:4;;;;;;;;;;;;;;;;;;;7688:23:3;;;:::i;:::-;276:2067:4;7758:17:3;;276:2067:4;-1:-1:-1;;;;;276:2067:4;7758:17:3;276:2067:4;;7744:10:3;:31;276:2067:4;;;;;2028:12;276:2067;;2028:25;276:2067;;;2028:25;276:2067;;;;;;1990:33;276:2067;;;;1979:10;276:2067;;;;;;;;;;;;;;;;;;2028:12;276:2067;;;;;;;;;;;;;;;;2028:25;276:2067;;;;;;;;;;;;;;;;;;;2028:12;276:2067;;;;1979:10;276:2067;;;;;;;;;;;;;;;;;;;;;;;;;7893:24:3;;;;276:2067:4;;;7928:15:3;;;;;;;;;276:2067:4;7885:65:3;;;;;;276:2067:4;7885:65:3;;;;276:2067:4;7969:23:3;;;;;;;276:2067:4;;8003:15:3;;;:20;276:2067:4;7961:63:3;;;;;;276:2067:4;7961:63:3;;;;276:2067:4;8064:15:3;;;7969:23;8064:15;;:25;276:2067:4;8035:55:3;;;;;276:2067:4;7744:10:3;8035:55;;;;;276:2067:4;;2028:25;276:2067;;;;;;;;;;;;;;8121:49:3;;276:2067:4;8121:49:3;;276:2067:4;8121:49:3;;;;;;;276:2067:4;8121:49:3;;;276:2067:4;8209:15:3;276:2067:4;8209:15:3;;;;;;7893:24;8209:15;;;:20;276:2067:4;8181:49:3;;;;;;;276:2067:4;;8181:49:3;;;;;276:2067:4;8181:49:3;276:2067:4;;;;;;;;;8181:49:3;;;-1:-1:-1;8181:49:3;;8121;;;;;;;;;;;;;;;;;:::i;:::-;;;276:2067:4;;;;;;;;;;;;;;;8121:49:3;276:2067:4;8121:49:3;;;;;;;8035:55;;;;;7961:63;;;;;7885:65;;;;;276:2067:4;;;;;;;;;;;;;;;-1:-1:-1;;;276:2067:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;;276:2067:4;;;;;;;;;;;;;-1:-1:-1;;276:2067:4;;;;;;;505:38:3;276:2067:4;;;;;;;;;-1:-1:-1;;276:2067:4;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;276:2067:4;;;;;;;;;;;;;;2306:42:3;276:2067:4;;;;;;;;2314:10:3;:19;2306:42;:::i;:::-;276:2067:4;;;4952:32:3;276:2067:4;;;;;4952:32:3;276:2067:4;;;;;;;;;;-1:-1:-1;;276:2067:4;;;;2306:42:3;276:2067:4;;;;;;;;2314:10:3;:19;2306:42;:::i;:::-;276:2067:4;;;;;;;-1:-1:-1;;276:2067:4;;;;;;:::i;:::-;;;-1:-1:-1;;;;;276:2067:4;;2306:42:3;;276:2067:4;;2314:10:3;:19;2306:42;:::i;:::-;276:2067:4;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;276:2067:4;;;;-1:-1:-1;;;;;276:2067:4;;:::i;:::-;;;;634:48;276:2067;;;;;;;;;;;;;;;;-1:-1:-1;;276:2067:4;;;;;;:::i;:::-;;;-1:-1:-1;;;;;276:2067:4;;;;;;;2643:13:3;276:2067:4;;;;;5508:12:3;276:2067:4;;;-1:-1:-1;;;5508:36:3;;276:2067:4;;;5508:36:3;;276:2067:4;-1:-1:-1;;;;;276:2067:4;;;;;;;;;5508:36:3;;;;;;;276:2067:4;5508:36:3;;;276:2067:4;-1:-1:-1;276:2067:4;;;;-1:-1:-1;;;5582:94:3;;276:2067:4;-1:-1:-1;;;;;276:2067:4;;;;;;;5582:94:3;276:2067:4;;;;;5582:94:3;;;:::i;:::-;;;;;;;;;;;276:2067:4;5582:94:3;;;276:2067:4;;;;;;;:::i;:::-;-1:-1:-1;276:2067:4;;-1:-1:-1;;;10604:35:3;;276:2067:4;;;10604:35:3;;276:2067:4;;;;;;10604:35:3;;;;;;;276:2067:4;10604:35:3;;;276:2067:4;-1:-1:-1;276:2067:4;;;;-1:-1:-1;;;10669:117:3;;-1:-1:-1;;;;;276:2067:4;;;;10669:117:3;;276:2067:4;;;;;;;;;;;;;;;;;;;;;;10669:117:3;;;;;;;276:2067:4;10669:117:3;;;276:2067:4;-1:-1:-1;276:2067:4;;-1:-1:-1;;;10815:85:3;;276:2067:4;;;;10815:85:3;276:2067:4;;;;;10815:85:3;;;:::i;:::-;;;;;;;;;;;276:2067:4;10815:85:3;;;276:2067:4;10935:17:3;;10999:59;10935:17;10999:44;:28;10935:17;10999;10967:2;10935:28;:17;;;;;:::i;:::-;:28;:::i;:::-;276:2067:4;10999:17:3;;;;:::i;:28::-;11030:13;10999:44;;:::i;:59::-;11077:9;:21;276:2067:4;;;;;;;;;;;;:::i;:::-;;;11166:190:3;;;276:2067:4;11030:13:3;276:2067:4;11166:190:3;;276:2067:4;;11166:190:3;;276:2067:4;;11166:190:3;;276:2067:4;;;;;;;;;;5927:69:3;;276:2067:4;;;;;;;;5927:69:3;;276:2067:4;5927:69:3;;;;;;;276:2067:4;5927:69:3;;;276:2067:4;-1:-1:-1;276:2067:4;;-1:-1:-1;;;6039:74:3;;276:2067:4;;;-1:-1:-1;;;;;276:2067:4;;6039:74:3;;276:2067:4;;;;;;;;;;6039:74:3;;;;;;;276:2067:4;6039:74:3;;;276:2067:4;;6160:63:3;276:2067:4;;6160:63:3;:::i;:::-;6259:42;6307:36;6259:42;;;;:::i;:::-;6307:12;;:36;:::i;:::-;-1:-1:-1;276:2067:4;;;;;;;;;;;1492:10;276:2067;;6511:24:3;276:2067:4;;;;;6511:24:3;:::i;:::-;6510:44;276:2067:4;;;;;;6661:182:3;276:2067:4;6661:182:3;;276:2067:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6661:182:3;;276:2067:4;;;;;-1:-1:-1;;;;;276:2067:4;;;;;;;;;;;;;;6637:217:3;;276:2067:4;;;;;;;;7402:65:3;276:2067:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;6932:366:3;;276:2067:4;;;;;6932:366:3;;;276:2067:4;;;6932:366:3;;;276:2067:4;;;;;;;;;6932:366:3;;;276:2067:4;;;;;;;;;;;6932:366:3;;;7147:10;;276:2067:4;;6932:366:3;;;276:2067:4;;;6932:366:3;;;276:2067:4;;;6932:366:3;;;276:2067:4;;;;;;1750:12;276:2067;;;;;;;;;;;;;;;;;5508:12:3;276:2067:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2643:13:3;276:2067:4;;;;;;;;;;;;;;;;;;;1750:12;276:2067;;;;1492:10;276:2067;;;;;;;;;;;;;;;;;;;;;;10967:2:3;276:2067:4;;;;;;;;;;;;;;;;5508:12:3;276:2067:4;;;1844:25;276:2067;;;;;;;;;;1806:33;276:2067;;;;1492:10;276:2067;;1795:74;276:2067;;;;;;1795:74;:::i;:::-;276:2067;;;;;;;7147:10:3;276:2067:4;;;;7402:65:3;276:2067:4;;;;;;;;;;;;;;;;-1:-1:-1;;;276:2067:4;;;;;;;;;;;;-1:-1:-1;;;276:2067:4;;;;;;;;;;-1:-1:-1;;;276:2067:4;;;;;;;;;;;;;;;;;-1:-1:-1;;;276:2067:4;;;;;;;6039:74:3;;;;276:2067:4;6039:74:3;;276:2067:4;6039:74:3;;;;;;276:2067:4;6039:74:3;;;:::i;:::-;;;276:2067:4;;;;;6039:74:3;;;;;;;-1:-1:-1;6039:74:3;;5927:69;;;276:2067:4;5927:69:3;;276:2067:4;5927:69:3;;;;;;276:2067:4;5927:69:3;;;:::i;:::-;;;276:2067:4;;;;;;;;5927:69:3;;;;;-1:-1:-1;5927:69:3;;276:2067:4;;;-1:-1:-1;;;276:2067:4;;;;;;;;;;;;-1:-1:-1;;;276:2067:4;;;;;;;10815:85:3;;;;276:2067:4;10815:85:3;;276:2067:4;10815:85:3;;;;;;276:2067:4;10815:85:3;;;:::i;:::-;;;276:2067:4;;;;;10815:85:3;;;;;;;-1:-1:-1;10815:85:3;;10669:117;;;;276:2067:4;10669:117:3;;276:2067:4;10669:117:3;;;;;;276:2067:4;10669:117:3;;;:::i;:::-;;;276:2067:4;;;;;10669:117:3;;;;;;;-1:-1:-1;10669:117:3;;10604:35;;;;276:2067:4;10604:35:3;;276:2067:4;10604:35:3;;;;;;276:2067:4;10604:35:3;;;:::i;:::-;;;276:2067:4;;;;;10604:35:3;;;;;;;-1:-1:-1;10604:35:3;;5582:94;;;;276:2067:4;5582:94:3;;276:2067:4;5582:94:3;;;;;;276:2067:4;5582:94:3;;;:::i;:::-;;;276:2067:4;;;;;;5582:94:3;;276:2067:4;5582:94:3;;;;;-1:-1:-1;5582:94:3;;5508:36;;;;276:2067:4;5508:36:3;;276:2067:4;5508:36:3;;;;;;276:2067:4;5508:36:3;;;:::i;:::-;;;276:2067:4;;;;;5508:36:3;;;;;;;-1:-1:-1;5508:36:3;;276:2067:4;;;-1:-1:-1;;;276:2067:4;;;;;;;;;;;;-1:-1:-1;;;276:2067:4;;;;;;;;;;;;;-1:-1:-1;;276:2067:4;;;;;;886:25:3;276:2067:4;;;;;;;;;;;;;;;;-1:-1:-1;;276:2067:4;;;;;;;;-1:-1:-1;;;;;276:2067:4;;;;;;;;;;;;;;-1:-1:-1;;276:2067:4;;;;-1:-1:-1;;;;;276:2067:4;;:::i;:::-;;;;1492:10;276:2067;;;;;;;;;;;;;;;;;;;-1:-1:-1;;276:2067:4;;;;;;-1:-1:-1;;;;;276:2067:4;;:::i;:::-;;;;515:45;276:2067;;;;;;;;;;;;;-1:-1:-1;;;;;276:2067:4;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;276:2067:4;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;276:2067:4;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;276:2067:4;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;276:2067:4;;;;;;;;;;;;-1:-1:-1;;;276:2067:4;;;;;;;;-1:-1:-1;;;;;276:2067:4;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;-1:-1:-1;276:2067:4;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;-1:-1:-1;276:2067:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;999:356::-;-1:-1:-1;;;;;276:2067:4;-1:-1:-1;276:2067:4;;;1161:13;276:2067;;;;;;1228:12;1202:38;;1198:109;;999:356;:::o;1198:109::-;1228:12;;999:356;:::o;2150:160::-;276:2067;;:::i;:::-;;-1:-1:-1;276:2067:4;2282:12;276:2067;;;-1:-1:-1;276:2067:4;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;276:2067:4;;;;;;;;;;;;;;;;;;;;;;;;;;2282:12;276:2067;;;;;;;;;;;;;;;;;:::i;:::-;;;;;2150:160;:::o",
  "source": "// SPDX-License-Identifier: MIT \r\n/*\r\n\r\nName: MecaSchedulerContract\r\nDescription: An on-chain Scheduler contract for MECA ecosystem\r\nAuthor: Ciocirlan Stefan-Dan (sdcioc)\r\nDate: Feb 2024\r\n\r\nMIT License\r\n\r\n*/\r\n\r\npragma solidity ^0.8.17;\r\n\r\nimport \"./SchedulerAbstract.sol\";\r\n\r\ncontract MecaSchedulerContract is MecaSchedulerAbstractContract\r\n{\r\n    /// The running tasks map of taskId to running task\r\n    mapping(bytes32 => RunningTask) public runningTasks;\r\n    /// The Tower size map of towerAddress to size\r\n    mapping(address => uint256) public towersSize;\r\n    /// The end block of the hosts map of hostAddress to endBlock\r\n    mapping(address => uint256) public hostsEndBlock;\r\n\r\n    // custom modifiers\r\n\r\n    // constructor\r\n    constructor(\r\n        uint256 schedulerFee\r\n    ) MecaSchedulerAbstractContract(schedulerFee)\r\n    {\r\n    }\r\n\r\n    // External functions\r\n\r\n    // External functions that are view\r\n    \r\n    // External functions that are pure\r\n\r\n    // Public functions\r\n\r\n    function getHostFirstAvailableBlock(\r\n        address hostAddress\r\n    ) public view override returns (uint256)\r\n    {\r\n        uint256 hostFirstAvailableBlock = hostsEndBlock[hostAddress];\r\n        if (hostFirstAvailableBlock < block.number) {\r\n            hostFirstAvailableBlock = block.number;\r\n        }\r\n        return hostFirstAvailableBlock;\r\n    }\r\n\r\n    function getTowerCurrentSize(\r\n        address towerAddress\r\n    ) public view override returns (uint256)\r\n    {\r\n        return towersSize[towerAddress];\r\n    }\r\n\r\n    // Internal functions\r\n\r\n    function _clear() internal override\r\n    {\r\n    }\r\n\r\n    function _addRunningTask(\r\n        bytes32 taskId,\r\n        RunningTask memory runningTask\r\n    ) internal override\r\n    {\r\n        runningTasks[taskId] = runningTask;\r\n        towersSize[runningTasks[taskId].towerAddress] += runningTasks[taskId].size;\r\n    }\r\n\r\n    function _deleteRunningTask(\r\n        bytes32 taskId\r\n    ) internal override\r\n    {\r\n        towersSize[runningTasks[taskId].towerAddress] -= runningTasks[taskId].size;\r\n        delete runningTasks[taskId];\r\n    }\r\n\r\n    // Internal functions that are view\r\n\r\n    function _getRunningTask(\r\n        bytes32 taskId\r\n    ) internal view override returns (RunningTask memory)\r\n    {\r\n        return runningTasks[taskId];\r\n    }\r\n\r\n    // Private functions\r\n\r\n}",
  "sourcePath": "C:\\Users\\jxlim\\repos\\meca_contracts\\src\\contracts\\SchedulerContract.sol",
  "ast": {
    "absolutePath": "project:/contracts/SchedulerContract.sol",
    "exportedSymbols": {
      "MecaHostAbstractContract": [
        698
      ],
      "MecaSchedulerAbstractContract": [
        1922
      ],
      "MecaSchedulerContract": [
        2065
      ],
      "MecaTaskAbstractContract": [
        2412
      ],
      "MecaTowerAbstractContract": [
        3398
      ]
    },
    "id": 2066,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1924,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "211:24:4"
      },
      {
        "absolutePath": "project:/contracts/SchedulerAbstract.sol",
        "file": "./SchedulerAbstract.sol",
        "id": 1925,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2066,
        "sourceUnit": 1923,
        "src": "239:33:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1926,
              "name": "MecaSchedulerAbstractContract",
              "nameLocations": [
                "310:29:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1922,
              "src": "310:29:4"
            },
            "id": 1927,
            "nodeType": "InheritanceSpecifier",
            "src": "310:29:4"
          }
        ],
        "canonicalName": "MecaSchedulerContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2065,
        "linearizedBaseContracts": [
          2065,
          1922
        ],
        "name": "MecaSchedulerContract",
        "nameLocation": "285:21:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 1928,
              "nodeType": "StructuredDocumentation",
              "src": "348:51:4",
              "text": "The running tasks map of taskId to running task"
            },
            "functionSelector": "abc1e7eb",
            "id": 1933,
            "mutability": "mutable",
            "name": "runningTasks",
            "nameLocation": "444:12:4",
            "nodeType": "VariableDeclaration",
            "scope": 2065,
            "src": "405:51:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RunningTask_$1330_storage_$",
              "typeString": "mapping(bytes32 => struct MecaSchedulerAbstractContract.RunningTask)"
            },
            "typeName": {
              "id": 1932,
              "keyType": {
                "id": 1929,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "413:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "405:31:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RunningTask_$1330_storage_$",
                "typeString": "mapping(bytes32 => struct MecaSchedulerAbstractContract.RunningTask)"
              },
              "valueType": {
                "id": 1931,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1930,
                  "name": "RunningTask",
                  "nameLocations": [
                    "424:11:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1330,
                  "src": "424:11:4"
                },
                "referencedDeclaration": 1330,
                "src": "424:11:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RunningTask_$1330_storage_ptr",
                  "typeString": "struct MecaSchedulerAbstractContract.RunningTask"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1934,
              "nodeType": "StructuredDocumentation",
              "src": "463:46:4",
              "text": "The Tower size map of towerAddress to size"
            },
            "functionSelector": "0077285b",
            "id": 1938,
            "mutability": "mutable",
            "name": "towersSize",
            "nameLocation": "550:10:4",
            "nodeType": "VariableDeclaration",
            "scope": 2065,
            "src": "515:45:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1937,
              "keyType": {
                "id": 1935,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "523:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "515:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1936,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "534:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1939,
              "nodeType": "StructuredDocumentation",
              "src": "567:61:4",
              "text": "The end block of the hosts map of hostAddress to endBlock"
            },
            "functionSelector": "2e926915",
            "id": 1943,
            "mutability": "mutable",
            "name": "hostsEndBlock",
            "nameLocation": "669:13:4",
            "nodeType": "VariableDeclaration",
            "scope": 2065,
            "src": "634:48:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1942,
              "keyType": {
                "id": 1940,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "642:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "634:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1941,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "653:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1951,
              "nodeType": "Block",
              "src": "837:8:4",
              "statements": []
            },
            "id": 1952,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1948,
                    "name": "schedulerFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1945,
                    "src": "818:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1949,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1947,
                  "name": "MecaSchedulerAbstractContract",
                  "nameLocations": [
                    "788:29:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1922,
                  "src": "788:29:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "788:43:4"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1945,
                  "mutability": "mutable",
                  "name": "schedulerFee",
                  "nameLocation": "768:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1952,
                  "src": "760:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1944,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "760:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "749:38:4"
            },
            "returnParameters": {
              "id": 1950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "837:0:4"
            },
            "scope": 2065,
            "src": "738:107:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1799
            ],
            "body": {
              "id": 1979,
              "nodeType": "Block",
              "src": "1116:239:4",
              "statements": [
                {
                  "assignments": [
                    1961
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1961,
                      "mutability": "mutable",
                      "name": "hostFirstAvailableBlock",
                      "nameLocation": "1135:23:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1979,
                      "src": "1127:31:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1960,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1127:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1965,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1962,
                      "name": "hostsEndBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1943,
                      "src": "1161:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1964,
                    "indexExpression": {
                      "id": 1963,
                      "name": "hostAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1954,
                      "src": "1175:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1161:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1127:60:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1966,
                      "name": "hostFirstAvailableBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1961,
                      "src": "1202:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1967,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1228:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1234:6:4",
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "1228:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1202:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1976,
                  "nodeType": "IfStatement",
                  "src": "1198:109:4",
                  "trueBody": {
                    "id": 1975,
                    "nodeType": "Block",
                    "src": "1242:65:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 1973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1970,
                            "name": "hostFirstAvailableBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1961,
                            "src": "1257:23:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1971,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "1283:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1289:6:4",
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "1283:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1257:38:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1974,
                        "nodeType": "ExpressionStatement",
                        "src": "1257:38:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1977,
                    "name": "hostFirstAvailableBlock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1961,
                    "src": "1324:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1959,
                  "id": 1978,
                  "nodeType": "Return",
                  "src": "1317:30:4"
                }
              ]
            },
            "functionSelector": "66041a73",
            "id": 1980,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHostFirstAvailableBlock",
            "nameLocation": "1008:26:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1956,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1084:8:4"
            },
            "parameters": {
              "id": 1955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1954,
                  "mutability": "mutable",
                  "name": "hostAddress",
                  "nameLocation": "1053:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1980,
                  "src": "1045:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1953,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1045:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1034:37:4"
            },
            "returnParameters": {
              "id": 1959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1958,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1980,
                  "src": "1102:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1957,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1102:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1101:9:4"
            },
            "scope": 2065,
            "src": "999:356:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1807
            ],
            "body": {
              "id": 1992,
              "nodeType": "Block",
              "src": "1474:50:4",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1988,
                      "name": "towersSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1938,
                      "src": "1492:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1990,
                    "indexExpression": {
                      "id": 1989,
                      "name": "towerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1982,
                      "src": "1503:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1492:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1987,
                  "id": 1991,
                  "nodeType": "Return",
                  "src": "1485:31:4"
                }
              ]
            },
            "functionSelector": "0182d79e",
            "id": 1993,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTowerCurrentSize",
            "nameLocation": "1372:19:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1984,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1442:8:4"
            },
            "parameters": {
              "id": 1983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1982,
                  "mutability": "mutable",
                  "name": "towerAddress",
                  "nameLocation": "1410:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1993,
                  "src": "1402:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1981,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1402:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1391:38:4"
            },
            "returnParameters": {
              "id": 1987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1986,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1993,
                  "src": "1460:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1985,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1460:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1459:9:4"
            },
            "scope": 2065,
            "src": "1363:161:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1811
            ],
            "body": {
              "id": 1997,
              "nodeType": "Block",
              "src": "1602:8:4",
              "statements": []
            },
            "id": 1998,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_clear",
            "nameLocation": "1570:6:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1995,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1588:8:4"
            },
            "parameters": {
              "id": 1994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1576:2:4"
            },
            "returnParameters": {
              "id": 1996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1602:0:4"
            },
            "scope": 2065,
            "src": "1561:49:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1906
            ],
            "body": {
              "id": 2025,
              "nodeType": "Block",
              "src": "1739:138:4",
              "statements": [
                {
                  "expression": {
                    "id": 2011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2007,
                        "name": "runningTasks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1933,
                        "src": "1750:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RunningTask_$1330_storage_$",
                          "typeString": "mapping(bytes32 => struct MecaSchedulerAbstractContract.RunningTask storage ref)"
                        }
                      },
                      "id": 2009,
                      "indexExpression": {
                        "id": 2008,
                        "name": "taskId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2000,
                        "src": "1763:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1750:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RunningTask_$1330_storage",
                        "typeString": "struct MecaSchedulerAbstractContract.RunningTask storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2010,
                      "name": "runningTask",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2003,
                      "src": "1773:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RunningTask_$1330_memory_ptr",
                        "typeString": "struct MecaSchedulerAbstractContract.RunningTask memory"
                      }
                    },
                    "src": "1750:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RunningTask_$1330_storage",
                      "typeString": "struct MecaSchedulerAbstractContract.RunningTask storage ref"
                    }
                  },
                  "id": 2012,
                  "nodeType": "ExpressionStatement",
                  "src": "1750:34:4"
                },
                {
                  "expression": {
                    "id": 2023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2013,
                        "name": "towersSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1938,
                        "src": "1795:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2018,
                      "indexExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 2014,
                            "name": "runningTasks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1933,
                            "src": "1806:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RunningTask_$1330_storage_$",
                              "typeString": "mapping(bytes32 => struct MecaSchedulerAbstractContract.RunningTask storage ref)"
                            }
                          },
                          "id": 2016,
                          "indexExpression": {
                            "id": 2015,
                            "name": "taskId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2000,
                            "src": "1819:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1806:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RunningTask_$1330_storage",
                            "typeString": "struct MecaSchedulerAbstractContract.RunningTask storage ref"
                          }
                        },
                        "id": 2017,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1827:12:4",
                        "memberName": "towerAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1318,
                        "src": "1806:33:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1795:45:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 2019,
                          "name": "runningTasks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1933,
                          "src": "1844:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RunningTask_$1330_storage_$",
                            "typeString": "mapping(bytes32 => struct MecaSchedulerAbstractContract.RunningTask storage ref)"
                          }
                        },
                        "id": 2021,
                        "indexExpression": {
                          "id": 2020,
                          "name": "taskId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2000,
                          "src": "1857:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1844:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RunningTask_$1330_storage",
                          "typeString": "struct MecaSchedulerAbstractContract.RunningTask storage ref"
                        }
                      },
                      "id": 2022,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1865:4:4",
                      "memberName": "size",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1316,
                      "src": "1844:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1795:74:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2024,
                  "nodeType": "ExpressionStatement",
                  "src": "1795:74:4"
                }
              ]
            },
            "id": 2026,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addRunningTask",
            "nameLocation": "1627:15:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2005,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1725:8:4"
            },
            "parameters": {
              "id": 2004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2000,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "1661:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2026,
                  "src": "1653:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1999,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1653:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2003,
                  "mutability": "mutable",
                  "name": "runningTask",
                  "nameLocation": "1697:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2026,
                  "src": "1678:30:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RunningTask_$1330_memory_ptr",
                    "typeString": "struct MecaSchedulerAbstractContract.RunningTask"
                  },
                  "typeName": {
                    "id": 2002,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2001,
                      "name": "RunningTask",
                      "nameLocations": [
                        "1678:11:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1330,
                      "src": "1678:11:4"
                    },
                    "referencedDeclaration": 1330,
                    "src": "1678:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RunningTask_$1330_storage_ptr",
                      "typeString": "struct MecaSchedulerAbstractContract.RunningTask"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1642:73:4"
            },
            "returnParameters": {
              "id": 2006,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1739:0:4"
            },
            "scope": 2065,
            "src": "1618:259:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1912
            ],
            "body": {
              "id": 2049,
              "nodeType": "Block",
              "src": "1968:131:4",
              "statements": [
                {
                  "expression": {
                    "id": 2042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2032,
                        "name": "towersSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1938,
                        "src": "1979:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2037,
                      "indexExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 2033,
                            "name": "runningTasks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1933,
                            "src": "1990:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RunningTask_$1330_storage_$",
                              "typeString": "mapping(bytes32 => struct MecaSchedulerAbstractContract.RunningTask storage ref)"
                            }
                          },
                          "id": 2035,
                          "indexExpression": {
                            "id": 2034,
                            "name": "taskId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2028,
                            "src": "2003:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1990:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RunningTask_$1330_storage",
                            "typeString": "struct MecaSchedulerAbstractContract.RunningTask storage ref"
                          }
                        },
                        "id": 2036,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2011:12:4",
                        "memberName": "towerAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1318,
                        "src": "1990:33:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1979:45:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 2038,
                          "name": "runningTasks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1933,
                          "src": "2028:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RunningTask_$1330_storage_$",
                            "typeString": "mapping(bytes32 => struct MecaSchedulerAbstractContract.RunningTask storage ref)"
                          }
                        },
                        "id": 2040,
                        "indexExpression": {
                          "id": 2039,
                          "name": "taskId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2028,
                          "src": "2041:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2028:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RunningTask_$1330_storage",
                          "typeString": "struct MecaSchedulerAbstractContract.RunningTask storage ref"
                        }
                      },
                      "id": 2041,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2049:4:4",
                      "memberName": "size",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1316,
                      "src": "2028:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1979:74:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2043,
                  "nodeType": "ExpressionStatement",
                  "src": "1979:74:4"
                },
                {
                  "expression": {
                    "id": 2047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2064:27:4",
                    "subExpression": {
                      "baseExpression": {
                        "id": 2044,
                        "name": "runningTasks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1933,
                        "src": "2071:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RunningTask_$1330_storage_$",
                          "typeString": "mapping(bytes32 => struct MecaSchedulerAbstractContract.RunningTask storage ref)"
                        }
                      },
                      "id": 2046,
                      "indexExpression": {
                        "id": 2045,
                        "name": "taskId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2028,
                        "src": "2084:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2071:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RunningTask_$1330_storage",
                        "typeString": "struct MecaSchedulerAbstractContract.RunningTask storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2048,
                  "nodeType": "ExpressionStatement",
                  "src": "2064:27:4"
                }
              ]
            },
            "id": 2050,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deleteRunningTask",
            "nameLocation": "1894:18:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2030,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1954:8:4"
            },
            "parameters": {
              "id": 2029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2028,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "1931:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2050,
                  "src": "1923:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2027,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1923:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1912:32:4"
            },
            "returnParameters": {
              "id": 2031,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1968:0:4"
            },
            "scope": 2065,
            "src": "1885:214:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1921
            ],
            "body": {
              "id": 2063,
              "nodeType": "Block",
              "src": "2264:46:4",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2059,
                      "name": "runningTasks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1933,
                      "src": "2282:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RunningTask_$1330_storage_$",
                        "typeString": "mapping(bytes32 => struct MecaSchedulerAbstractContract.RunningTask storage ref)"
                      }
                    },
                    "id": 2061,
                    "indexExpression": {
                      "id": 2060,
                      "name": "taskId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2052,
                      "src": "2295:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2282:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RunningTask_$1330_storage",
                      "typeString": "struct MecaSchedulerAbstractContract.RunningTask storage ref"
                    }
                  },
                  "functionReturnParameters": 2058,
                  "id": 2062,
                  "nodeType": "Return",
                  "src": "2275:27:4"
                }
              ]
            },
            "id": 2064,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getRunningTask",
            "nameLocation": "2159:15:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2054,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2221:8:4"
            },
            "parameters": {
              "id": 2053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2052,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "2193:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2064,
                  "src": "2185:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2051,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2185:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2174:32:4"
            },
            "returnParameters": {
              "id": 2058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2057,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2064,
                  "src": "2239:18:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RunningTask_$1330_memory_ptr",
                    "typeString": "struct MecaSchedulerAbstractContract.RunningTask"
                  },
                  "typeName": {
                    "id": 2056,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2055,
                      "name": "RunningTask",
                      "nameLocations": [
                        "2239:11:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1330,
                      "src": "2239:11:4"
                    },
                    "referencedDeclaration": 1330,
                    "src": "2239:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RunningTask_$1330_storage_ptr",
                      "typeString": "struct MecaSchedulerAbstractContract.RunningTask"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2238:20:4"
            },
            "scope": 2065,
            "src": "2150:160:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2066,
        "src": "276:2067:4",
        "usedErrors": []
      }
    ],
    "src": "211:2132:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {
    "1709024341832": {
      "events": {},
      "links": {},
      "address": "0xB409FCd95b4aDeB57fE653200B04ea2b9a7a64e4",
      "transactionHash": "0x7f62b0a90798e992a374c918df058b30b47337afff4d834118a293e994f2fda0"
    },
    "1709027721628": {
      "events": {},
      "links": {},
      "address": "0xB409FCd95b4aDeB57fE653200B04ea2b9a7a64e4",
      "transactionHash": "0x7f62b0a90798e992a374c918df058b30b47337afff4d834118a293e994f2fda0"
    },
    "1709028005748": {
      "events": {},
      "links": {},
      "address": "0xB409FCd95b4aDeB57fE653200B04ea2b9a7a64e4",
      "transactionHash": "0x7f62b0a90798e992a374c918df058b30b47337afff4d834118a293e994f2fda0"
    },
    "1709086571086": {
      "events": {},
      "links": {},
      "address": "0xB409FCd95b4aDeB57fE653200B04ea2b9a7a64e4",
      "transactionHash": "0x7f62b0a90798e992a374c918df058b30b47337afff4d834118a293e994f2fda0"
    },
    "1709087406796": {
      "events": {},
      "links": {},
      "address": "0xB409FCd95b4aDeB57fE653200B04ea2b9a7a64e4",
      "transactionHash": "0x7f62b0a90798e992a374c918df058b30b47337afff4d834118a293e994f2fda0"
    },
    "1709108111091": {
      "events": {},
      "links": {},
      "address": "0xB409FCd95b4aDeB57fE653200B04ea2b9a7a64e4",
      "transactionHash": "0x7f62b0a90798e992a374c918df058b30b47337afff4d834118a293e994f2fda0"
    },
    "1709171512567": {
      "events": {},
      "links": {},
      "address": "0x4169D71D56563eA9FDE76D92185bEB7aa1Da6fB8",
      "transactionHash": "0x39e1705c1a8fea384236e32959f41022469b2343fb30ac98681ac1335d0643b4"
    }
  },
  "schemaVersion": "3.4.12",
  "updatedAt": "2024-02-29T01:53:47.033Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "clear()": {
        "details": "This function is used to clear the contract"
      },
      "finishTask(bytes32)": {
        "params": {
          "taskId": "The ID of the task"
        }
      },
      "getHostFirstAvailableBlock(address)": {
        "params": {
          "hostAddress": "The address of the host"
        },
        "returns": {
          "_0": "uint256 The first available block"
        }
      },
      "getRunningTask(bytes32)": {
        "params": {
          "taskId": "The ID of the task"
        },
        "returns": {
          "_0": "RunningTask The running task"
        }
      },
      "getTowerCurrentSize(address)": {
        "params": {
          "towerAddress": "The address of the tower"
        },
        "returns": {
          "_0": "uint256 The current size of the tower"
        }
      },
      "sendTask(address,address,bytes32,bytes32)": {
        "params": {
          "hostAddress": "The address of the host",
          "inputHash": "The hash of the input",
          "ipfsSha256": "The IPFS hash of the task",
          "towerAddress": "The address of the tower"
        }
      },
      "setHostContract(address)": {
        "params": {
          "newHostContract": "The new host contract"
        }
      },
      "setSchedulerFlag(bool)": {
        "params": {
          "newSchedulerFlag": "The new scheduler flag"
        }
      },
      "setTaskContract(address)": {
        "params": {
          "newTaskContract": "The new task contract"
        }
      },
      "setTowerContract(address)": {
        "params": {
          "newTowerContract": "The new tower contract"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "SCHEDULER_FEE()": {
        "notice": "The scheduler fee"
      },
      "clear()": {
        "notice": "The clear function"
      },
      "finishTask(bytes32)": {
        "notice": "Finish a task"
      },
      "getHostContract()": {
        "notice": "Get the host contract"
      },
      "getHostFirstAvailableBlock(address)": {
        "notice": "Get the host first available block"
      },
      "getRunningTask(bytes32)": {
        "notice": "Get the running task"
      },
      "getTaskContract()": {
        "notice": "Get the task contract"
      },
      "getTowerContract()": {
        "notice": "Get the tower contract"
      },
      "getTowerCurrentSize(address)": {
        "notice": "Get the tower current size"
      },
      "hostsEndBlock(address)": {
        "notice": "The end block of the hosts map of hostAddress to endBlock"
      },
      "owner()": {
        "notice": "The owner of the contract"
      },
      "runningTasks(bytes32)": {
        "notice": "The running tasks map of taskId to running task"
      },
      "schedulerFlag()": {
        "notice": "The scheduler flag"
      },
      "schedulerNonce()": {
        "notice": "The scheduler nonce"
      },
      "sendTask(address,address,bytes32,bytes32)": {
        "notice": "Send a task to the scheduler"
      },
      "setHostContract(address)": {
        "notice": "The setHostContract function"
      },
      "setSchedulerFlag(bool)": {
        "notice": "The setSchedulerFlag function"
      },
      "setTaskContract(address)": {
        "notice": "The setTaskContract function"
      },
      "setTowerContract(address)": {
        "notice": "The setTowerContract function"
      },
      "towersSize(address)": {
        "notice": "The Tower size map of towerAddress to size"
      }
    },
    "version": 1
  }
}