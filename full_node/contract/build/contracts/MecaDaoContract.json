{
  "contractName": "MecaDaoContract",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [],
      "name": "clear",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newSchedulerContract",
          "type": "address"
        }
      ],
      "name": "setSchedulerContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSchedulerContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"clear\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSchedulerContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSchedulerContract\",\"type\":\"address\"}],\"name\":\"setSchedulerContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getSchedulerContract()\":{\"returns\":{\"_0\":\"address The scheduler contract adddress\"}},\"setSchedulerContract(address)\":{\"params\":{\"newSchedulerContract\":\"The new scheduler contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"clear()\":{\"notice\":\"The clear function\"},\"getSchedulerContract()\":{\"notice\":\"The getSchedulerContract function\"},\"owner()\":{\"notice\":\"The owner of the contract\"},\"setSchedulerContract(address)\":{\"notice\":\"The setSchedulerContract function\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/MecaContract.sol\":\"MecaDaoContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[],\"viaIR\":true},\"sources\":{\"project:/contracts/HostAbstract.sol\":{\"keccak256\":\"0xdd86a0a5588f8b94537597309dde103bdc2a30d40de730df02efb20bfc00cbec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1f69e7cc1999db7b869464f177aaa1f3c356ee5e5ec369caced80db7a5cf3eb\",\"dweb:/ipfs/QmbdcPGLABgSeCoV78J3CJTtKwGDovyhvEmH6FRPX3AoHw\"]},\"project:/contracts/MecaContract.sol\":{\"keccak256\":\"0xab11886851ea02a3ea52e4d14c338388c9841d876f05ef5b8af94c7f4327f9ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://212c66a133037d75793e3171b5837da1b0d30ddd6a198fac1030d817aca8c171\",\"dweb:/ipfs/QmdGGanVbVG8vfcfW6XvFPmMotu9yqhfhTSugcsX3ot7A4\"]},\"project:/contracts/SchedulerAbstract.sol\":{\"keccak256\":\"0xbcf6291d232a520124bfea321f7fc8d32f0952b167e40cb9628dad069e7cb123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666aac561e576c8f46dae3290094d1ef3745094186347ba07e5c09a4ccfbb974\",\"dweb:/ipfs/QmSThfgHnJhoqsQJTfStg2gz6fLhzLHK6QDSqmXEtxbBe4\"]},\"project:/contracts/TaskAbstract.sol\":{\"keccak256\":\"0x539d8b7b8336d50cd6e5af04552e3a9b0d47cf91ace4a2922fdec62e1654883d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ccf9c8bf2ad2d3c82460e8f0ceaacbf15df5422646b57e8d0f2b54494e0ca2\",\"dweb:/ipfs/QmWDdzHQT9Qa4sL47LbSqgM4Hb7WRWsomDE4L6hL58BB2V\"]},\"project:/contracts/TowerAbstract.sol\":{\"keccak256\":\"0xb8e634bf0b06fb07d3b146d90eefbaf01f759b91104baeaa24b2a89d8ec10363\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2c67926c71f71fb35031041067999b80b8ed1d85a9c42c99eef717af8e15eb5\",\"dweb:/ipfs/QmWsqBTs88ACHx4bqnyvmTctE39howPCKhLQMBtD7yYvrR\"]}},\"version\":1}",
  "bytecode": "0x6080806040523461002f5760018060a01b0319338160005416176000556001541660015561025990816100358239f35b600080fdfe6040608081526004361015610020575b50361561001b57600080fd5b600080fd5b600090813560e01c8063521473b01461019657806352efea6e146100ab57806363f609711461008357638da5cb5b14610059575061000f565b3461007f578160031936011261007f57905490516001600160a01b039091168152602090f35b5080fd5b503461007f578160031936011261007f5760015490516001600160a01b039091168152602090f35b503461007f578160031936011261007f578180808060018060a01b038154166100d58133146101ea565b600180546001600160a01b031916905547905af13d156101915767ffffffffffffffff3d81811161017d57835191601f8201601f19908116603f011683019081118382101761016957845281528360203d92013e5b15610133575080f35b5162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b6044820152606490fd5b634e487b7160e01b86526041600452602486fd5b634e487b7160e01b85526041600452602485fd5b61012a565b82346101e75760203660031901126101e7576004356001600160a01b03818116918290036101e3576101cc9083541633146101ea565b600180546001600160a01b03191691909117905580f35b8280fd5b80fd5b156101f157565b60405162461bcd60e51b815260206004820152600a6024820152694f776e6572206f6e6c7960b01b6044820152606490fdfea264697066735822122076e8434a7d227dfb7d01e40a49239517d697099d73ad0e0f448e7e28455d46a464736f6c63430008110033",
  "deployedBytecode": "0x6040608081526004361015610020575b50361561001b57600080fd5b600080fd5b600090813560e01c8063521473b01461019657806352efea6e146100ab57806363f609711461008357638da5cb5b14610059575061000f565b3461007f578160031936011261007f57905490516001600160a01b039091168152602090f35b5080fd5b503461007f578160031936011261007f5760015490516001600160a01b039091168152602090f35b503461007f578160031936011261007f578180808060018060a01b038154166100d58133146101ea565b600180546001600160a01b031916905547905af13d156101915767ffffffffffffffff3d81811161017d57835191601f8201601f19908116603f011683019081118382101761016957845281528360203d92013e5b15610133575080f35b5162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b6044820152606490fd5b634e487b7160e01b86526041600452602486fd5b634e487b7160e01b85526041600452602485fd5b61012a565b82346101e75760203660031901126101e7576004356001600160a01b03818116918290036101e3576101cc9083541633146101ea565b600180546001600160a01b03191691909117905580f35b8280fd5b80fd5b156101f157565b60405162461bcd60e51b815260206004820152600a6024820152694f776e6572206f6e6c7960b01b6044820152606490fdfea264697066735822122076e8434a7d227dfb7d01e40a49239517d697099d73ad0e0f448e7e28455d46a464736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "266:2001:2:-:0;;;;;;;;;;;;;697:10;266:2001;681:27;266:2001;;;681:27;266:2001;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "266:2001:2:-:0;;;;;;;;;;-1:-1:-1;266:2001:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;266:2001:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;266:2001:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;566:42;574:10;;:19;566:42;:::i;:::-;266:2001;;;-1:-1:-1;;;;;;266:2001:2;;;1361:21;;1343:44;;266:2001;;;;;;;;;;;;;;;;;-1:-1:-1;;266:2001:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;266:2001:2;;;;;;;;;;;;-1:-1:-1;;;266:2001:2;;;;;;;;-1:-1:-1;;;266:2001:2;;;;;;;;;-1:-1:-1;;;266:2001:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;266:2001:2;;;;;;-1:-1:-1;;;;;266:2001:2;;;;;;;;;566:42;266:2001;;;;574:10;:19;566:42;:::i;:::-;266:2001;;;-1:-1:-1;;;;;;266:2001:2;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;266:2001:2;;;;;;;;;;;;-1:-1:-1;;;266:2001:2;;;;;;",
  "source": "// SPDX-License-Identifier: MIT \r\n/*\r\n\r\nName: MecaDaoContract\r\nDescription: An on-chain DAO contract for MECA ecosystem\r\nAuthor: Ciocirlan Stefan-Dan (sdcioc)\r\nDate: Feb 2024\r\n\r\nMIT License\r\n\r\n*/\r\n\r\npragma solidity ^0.8.17;\r\n\r\n\r\nimport \"./SchedulerAbstract.sol\";\r\n\r\ncontract MecaDaoContract\r\n{\r\n    /// The owner of the contract\r\n\taddress payable public owner;\r\n    /// The scheduler contract\r\n    MecaSchedulerAbstractContract schedulerContract;\r\n\r\n    // custom modifiers\r\n    /**\r\n    * @notice The onlyOwner modifier\r\n    */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Owner only\");\r\n        _;\r\n    }\r\n\r\n    // constructor\r\n    constructor() {\r\n        owner = payable(msg.sender);\r\n        schedulerContract = MecaSchedulerAbstractContract(payable(address(0)));\r\n    }\r\n\r\n    // receive function\r\n\r\n    /**\r\n    * @notice The receive function\r\n    */\r\n    receive() external payable {\r\n        revert();\r\n    }\r\n\r\n    // fallback function\r\n\r\n    /**\r\n    * @notice The fallback function\r\n    */\r\n    fallback() external payable {\r\n        revert();\r\n    }\r\n\r\n    // External functions\r\n\r\n    /**\r\n    * @notice The clear function\r\n    */\r\n    function clear() external onlyOwner {\r\n        schedulerContract = MecaSchedulerAbstractContract(\r\n            payable(address(0))\r\n        );\r\n        (bool success, ) = owner.call{value: address(this).balance}(\"\");\r\n        require(success, \"Transfer failed.\");\r\n    }\r\n\r\n    /**\r\n    * @notice The setSchedulerContract function\r\n    * @param newSchedulerContract The new scheduler contract\r\n    */\r\n    function setSchedulerContract(\r\n        address newSchedulerContract\r\n    ) external onlyOwner {\r\n        schedulerContract = MecaSchedulerAbstractContract(\r\n            payable(newSchedulerContract)\r\n        );\r\n    }\r\n\r\n    // External functions that are view\r\n\r\n    /**\r\n    * @notice The getSchedulerContract function\r\n    * @return address The scheduler contract adddress\r\n    */\r\n    function getSchedulerContract() external view returns (address) {\r\n        return address(schedulerContract);\r\n    }\r\n    \r\n    // External functions that are pure\r\n\r\n    // Public functions\r\n\r\n    // Internal functions\r\n\r\n    // Internal functions that are view\r\n\r\n    // Private functions\r\n\r\n\r\n\r\n}\r\n",
  "sourcePath": "C:\\Users\\jxlim\\repos\\meca_contracts\\src\\contracts\\MecaContract.sol",
  "ast": {
    "absolutePath": "project:/contracts/MecaContract.sol",
    "exportedSymbols": {
      "MecaDaoContract": [
        1270
      ],
      "MecaHostAbstractContract": [
        698
      ],
      "MecaSchedulerAbstractContract": [
        1922
      ],
      "MecaTaskAbstractContract": [
        2412
      ],
      "MecaTowerAbstractContract": [
        3398
      ]
    },
    "id": 1271,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1141,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "199:24:2"
      },
      {
        "absolutePath": "project:/contracts/SchedulerAbstract.sol",
        "file": "./SchedulerAbstract.sol",
        "id": 1142,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1271,
        "sourceUnit": 1923,
        "src": "229:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "MecaDaoContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1270,
        "linearizedBaseContracts": [
          1270
        ],
        "name": "MecaDaoContract",
        "nameLocation": "275:15:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 1143,
              "nodeType": "StructuredDocumentation",
              "src": "299:29:2",
              "text": "The owner of the contract"
            },
            "functionSelector": "8da5cb5b",
            "id": 1145,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "354:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 1270,
            "src": "331:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 1144,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "331:15:2",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1146,
              "nodeType": "StructuredDocumentation",
              "src": "366:26:2",
              "text": "The scheduler contract"
            },
            "id": 1149,
            "mutability": "mutable",
            "name": "schedulerContract",
            "nameLocation": "428:17:2",
            "nodeType": "VariableDeclaration",
            "scope": 1270,
            "src": "398:47:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MecaSchedulerAbstractContract_$1922",
              "typeString": "contract MecaSchedulerAbstractContract"
            },
            "typeName": {
              "id": 1148,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1147,
                "name": "MecaSchedulerAbstractContract",
                "nameLocations": [
                  "398:29:2"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1922,
                "src": "398:29:2"
              },
              "referencedDeclaration": 1922,
              "src": "398:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MecaSchedulerAbstractContract_$1922",
                "typeString": "contract MecaSchedulerAbstractContract"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1161,
              "nodeType": "Block",
              "src": "555:73:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1153,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "574:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "578:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "574:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1155,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1145,
                          "src": "588:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "574:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e6572206f6e6c79",
                        "id": 1157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "595:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94c77a0c4952204a6690451c523dcb4250e583c51dee28a84cc81b969b4dee48",
                          "typeString": "literal_string \"Owner only\""
                        },
                        "value": "Owner only"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94c77a0c4952204a6690451c523dcb4250e583c51dee28a84cc81b969b4dee48",
                          "typeString": "literal_string \"Owner only\""
                        }
                      ],
                      "id": 1152,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "566:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "566:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1159,
                  "nodeType": "ExpressionStatement",
                  "src": "566:42:2"
                },
                {
                  "id": 1160,
                  "nodeType": "PlaceholderStatement",
                  "src": "619:1:2"
                }
              ]
            },
            "documentation": {
              "id": 1150,
              "nodeType": "StructuredDocumentation",
              "src": "479:49:2",
              "text": " @notice The onlyOwner modifier"
            },
            "id": 1162,
            "name": "onlyOwner",
            "nameLocation": "543:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "552:2:2"
            },
            "src": "534:94:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1185,
              "nodeType": "Block",
              "src": "670:127:2",
              "statements": [
                {
                  "expression": {
                    "id": 1171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1165,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1145,
                      "src": "681:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1168,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "697:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "701:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "697:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "689:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 1166,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "689:8:2",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "689:19:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "681:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 1172,
                  "nodeType": "ExpressionStatement",
                  "src": "681:27:2"
                },
                {
                  "expression": {
                    "id": 1183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1173,
                      "name": "schedulerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1149,
                      "src": "719:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MecaSchedulerAbstractContract_$1922",
                        "typeString": "contract MecaSchedulerAbstractContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1179,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "785:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1178,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "777:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1177,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "777:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "777:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "769:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 1175,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "769:8:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "769:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 1174,
                        "name": "MecaSchedulerAbstractContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1922,
                        "src": "739:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MecaSchedulerAbstractContract_$1922_$",
                          "typeString": "type(contract MecaSchedulerAbstractContract)"
                        }
                      },
                      "id": 1182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "739:50:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MecaSchedulerAbstractContract_$1922",
                        "typeString": "contract MecaSchedulerAbstractContract"
                      }
                    },
                    "src": "719:70:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MecaSchedulerAbstractContract_$1922",
                      "typeString": "contract MecaSchedulerAbstractContract"
                    }
                  },
                  "id": 1184,
                  "nodeType": "ExpressionStatement",
                  "src": "719:70:2"
                }
              ]
            },
            "id": 1186,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "667:2:2"
            },
            "returnParameters": {
              "id": 1164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "670:0:2"
            },
            "scope": 1270,
            "src": "656:141:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1193,
              "nodeType": "Block",
              "src": "912:27:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1190,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "923:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 1191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "923:8:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1192,
                  "nodeType": "ExpressionStatement",
                  "src": "923:8:2"
                }
              ]
            },
            "documentation": {
              "id": 1187,
              "nodeType": "StructuredDocumentation",
              "src": "832:47:2",
              "text": " @notice The receive function"
            },
            "id": 1194,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "892:2:2"
            },
            "returnParameters": {
              "id": 1189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "912:0:2"
            },
            "scope": 1270,
            "src": "885:54:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1201,
              "nodeType": "Block",
              "src": "1057:27:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1198,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "1068:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 1199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1068:8:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1200,
                  "nodeType": "ExpressionStatement",
                  "src": "1068:8:2"
                }
              ]
            },
            "documentation": {
              "id": 1195,
              "nodeType": "StructuredDocumentation",
              "src": "975:48:2",
              "text": " @notice The fallback function"
            },
            "id": 1202,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1037:2:2"
            },
            "returnParameters": {
              "id": 1197,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1057:0:2"
            },
            "scope": 1270,
            "src": "1029:55:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1238,
              "nodeType": "Block",
              "src": "1208:234:2",
              "statements": [
                {
                  "expression": {
                    "id": 1218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1208,
                      "name": "schedulerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1149,
                      "src": "1219:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MecaSchedulerAbstractContract_$1922",
                        "typeString": "contract MecaSchedulerAbstractContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1214,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1299:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1213,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1291:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1212,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1291:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1291:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1283:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 1210,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1283:8:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1283:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 1209,
                        "name": "MecaSchedulerAbstractContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1922,
                        "src": "1239:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MecaSchedulerAbstractContract_$1922_$",
                          "typeString": "type(contract MecaSchedulerAbstractContract)"
                        }
                      },
                      "id": 1217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1239:74:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MecaSchedulerAbstractContract_$1922",
                        "typeString": "contract MecaSchedulerAbstractContract"
                      }
                    },
                    "src": "1219:94:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MecaSchedulerAbstractContract_$1922",
                      "typeString": "contract MecaSchedulerAbstractContract"
                    }
                  },
                  "id": 1219,
                  "nodeType": "ExpressionStatement",
                  "src": "1219:94:2"
                },
                {
                  "assignments": [
                    1221,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1221,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1330:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1238,
                      "src": "1325:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1220,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1325:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1232,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 1230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1384:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 1222,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1145,
                          "src": "1343:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1349:4:2",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "1343:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1226,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1369:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MecaDaoContract_$1270",
                                  "typeString": "contract MecaDaoContract"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MecaDaoContract_$1270",
                                  "typeString": "contract MecaDaoContract"
                                }
                              ],
                              "id": 1225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1361:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1224,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1361:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1361:13:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1375:7:2",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1361:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1343:40:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1343:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1324:63:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1234,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1221,
                        "src": "1406:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666572206661696c65642e",
                        "id": 1235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1415:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
                          "typeString": "literal_string \"Transfer failed.\""
                        },
                        "value": "Transfer failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
                          "typeString": "literal_string \"Transfer failed.\""
                        }
                      ],
                      "id": 1233,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1398:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1398:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1237,
                  "nodeType": "ExpressionStatement",
                  "src": "1398:36:2"
                }
              ]
            },
            "documentation": {
              "id": 1203,
              "nodeType": "StructuredDocumentation",
              "src": "1121:45:2",
              "text": " @notice The clear function"
            },
            "functionSelector": "52efea6e",
            "id": 1239,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1206,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1205,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1198:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1162,
                  "src": "1198:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1198:9:2"
              }
            ],
            "name": "clear",
            "nameLocation": "1181:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1186:2:2"
            },
            "returnParameters": {
              "id": 1207,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1208:0:2"
            },
            "scope": 1270,
            "src": "1172:270:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1256,
              "nodeType": "Block",
              "src": "1673:123:2",
              "statements": [
                {
                  "expression": {
                    "id": 1254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1247,
                      "name": "schedulerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1149,
                      "src": "1684:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MecaSchedulerAbstractContract_$1922",
                        "typeString": "contract MecaSchedulerAbstractContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1251,
                              "name": "newSchedulerContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1242,
                              "src": "1756:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1748:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 1249,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1748:8:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1748:29:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 1248,
                        "name": "MecaSchedulerAbstractContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1922,
                        "src": "1704:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MecaSchedulerAbstractContract_$1922_$",
                          "typeString": "type(contract MecaSchedulerAbstractContract)"
                        }
                      },
                      "id": 1253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1704:84:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MecaSchedulerAbstractContract_$1922",
                        "typeString": "contract MecaSchedulerAbstractContract"
                      }
                    },
                    "src": "1684:104:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MecaSchedulerAbstractContract_$1922",
                      "typeString": "contract MecaSchedulerAbstractContract"
                    }
                  },
                  "id": 1255,
                  "nodeType": "ExpressionStatement",
                  "src": "1684:104:2"
                }
              ]
            },
            "documentation": {
              "id": 1240,
              "nodeType": "StructuredDocumentation",
              "src": "1450:122:2",
              "text": " @notice The setSchedulerContract function\n @param newSchedulerContract The new scheduler contract"
            },
            "functionSelector": "521473b0",
            "id": 1257,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1245,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1244,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1663:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1162,
                  "src": "1663:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1663:9:2"
              }
            ],
            "name": "setSchedulerContract",
            "nameLocation": "1587:20:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1242,
                  "mutability": "mutable",
                  "name": "newSchedulerContract",
                  "nameLocation": "1626:20:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1257,
                  "src": "1618:28:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1618:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1607:46:2"
            },
            "returnParameters": {
              "id": 1246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1673:0:2"
            },
            "scope": 1270,
            "src": "1578:218:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1268,
              "nodeType": "Block",
              "src": "2032:52:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1265,
                        "name": "schedulerContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1149,
                        "src": "2058:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MecaSchedulerAbstractContract_$1922",
                          "typeString": "contract MecaSchedulerAbstractContract"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MecaSchedulerAbstractContract_$1922",
                          "typeString": "contract MecaSchedulerAbstractContract"
                        }
                      ],
                      "id": 1264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2050:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1263,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2050:7:2",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2050:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1262,
                  "id": 1267,
                  "nodeType": "Return",
                  "src": "2043:33:2"
                }
              ]
            },
            "documentation": {
              "id": 1258,
              "nodeType": "StructuredDocumentation",
              "src": "1847:115:2",
              "text": " @notice The getSchedulerContract function\n @return address The scheduler contract adddress"
            },
            "functionSelector": "63f60971",
            "id": 1269,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSchedulerContract",
            "nameLocation": "1977:20:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1997:2:2"
            },
            "returnParameters": {
              "id": 1262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1261,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1269,
                  "src": "2023:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1260,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2023:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2022:9:2"
            },
            "scope": 1270,
            "src": "1968:116:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1271,
        "src": "266:2001:2",
        "usedErrors": []
      }
    ],
    "src": "199:2070:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.12",
  "updatedAt": "2024-02-29T01:53:24.825Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getSchedulerContract()": {
        "returns": {
          "_0": "address The scheduler contract adddress"
        }
      },
      "setSchedulerContract(address)": {
        "params": {
          "newSchedulerContract": "The new scheduler contract"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "clear()": {
        "notice": "The clear function"
      },
      "getSchedulerContract()": {
        "notice": "The getSchedulerContract function"
      },
      "owner()": {
        "notice": "The owner of the contract"
      },
      "setSchedulerContract(address)": {
        "notice": "The setSchedulerContract function"
      }
    },
    "version": 1
  }
}